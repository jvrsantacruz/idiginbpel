<?xml version="1.0" encoding="UTF-8"?>
<project name="BaseBPELBuildFile" default="abstract" basedir=".">

    <!-- Directorio en el que se halla este fichero Ant (así funciona siempre, da igual desde donde se importe) -->
    <dirname property="dir" file="${ant.file.BaseBPELBuildFile}"/>

    <!-- Directorio base de takuan, simplifica las localizaciones.  -->
    <!-- Se modificará probablemente al crear/cargar el proyecto -->
    <property name="takuan" location="${dir}/../../.."/>

    <!-- Importamos todas las variables de entorno existentes -->
    <property environment="env"/>

<!-- URL for downloading the latest version of the BPEL instrumenter JAR -->
  <property name="instr.jar.url"
            value="https://neptuno.uca.es/nexus/service/local/artifact/maven/content?r=snapshots&amp;g=es.uca.webservices&amp;a=AntBPELInstrumenter&amp;v=LATEST&amp;c=jar-with-dependencies"/>



  <!-- Location where the BPEL instrumenter JAR should be downloaded -->
  <property name="instr.jar.location" location="${dir}/bpel_instrumenter.jar"/>

    <!-- Ruta a los guiones de análisis mediante Daikon -->
    <property name="analyzer.path"  location="${takuan}/src/analizadorDaikon/" />

    <!-- Nombre del guión principal de análisis mediante Daikon -->
    <property name="analyzer.name"  value="analizadorDaikon.pl" />

    <!-- Opciones por defecto para el analizador de Daikon -->
    <property name="analyzer.flags" value="--metrics --simplify --index-flattening"/>

    <!-- Ruta a los process logs de Tomcat (No se necesita, lo hace la
         aplicación ahora) -->
    <!-- <property name="processlog.dir" location="${env.HOME}/AeBpelEngine/process-logs/"/>  -->
    <property name="processlog.dir" location="${proy}/anl_trazas"/> 

    <!-- Nombre del fichero BPEL instrumentado -->
    <property name="instrumented.bpel"  value="bpel_ins.bpel"/>

    <!-- Nombre del fichero de declaraciones generado por el autoinstrumentador -->
    <property name="instrumented.decls" value="procesoInspeccionado.decls"/>

    <!-- CUERPO DEL FICHERO ANT -->
    <target name="init">
        <tstamp/>

        <!-- Nombre de la carpeta de ficheros de salida de Daikon y el analizador -->
        <property name="daikonout.dir" location="daikon-out-${DSTAMP}-${TSTAMP}"/>

    </target>

	<!-- Classpath for the tasks -->
  <path id="lib.path">
    <fileset dir="${env.BPELUNIT_HOME}/lib"/>
    <pathelement path="${instr.jar.location}"/>
  </path>

	<typedef
      name="bpelunit"
      classname="net.bpelunit.framework.ui.ant.BPELUnit"
      classpathref="lib.path"
      loaderref="lib.path.loader"/>

    <target name="abstract">
        <fail message="Este fichero Ant no se usa directamente, sino que ha de ser importado por otro"/>
    </target>

    <target name="test-and-analyze" depends="analyze"
	description="Runs all tests and analyses the results with Daikon"/> 

    <target name="test" depends="" description="Runs all tests with BPELUnit">

        <!-- Ejecutamos BPELUnit -->
        <bpelunit testsuite="${bptsfile}" bpelunitdir="${env.BPELUNIT_HOME}">      
            <logging level="INFO"/>
        </bpelunit>
    </target>

    <target name="analyze" depends="init" description="Analyses the results of the last run with Daikon">
        <!-- Borramos la carpeta de análisis de Daikon (si estuviera) y la
        creamos de nuevo -->
        <delete dir="${daikonout.dir}"/>
        <mkdir  dir="${daikonout.dir}"/>

        <!-- Ejecutamos el motor de análisis por Daikon -->
        <apply executable="perl" dir="${analyzer.path}" parallel="true">
            <arg file="${analyzer.path}/${analyzer.name}"/>

            <!-- Opciones -->
            <arg line="${analyzer.flags}"/>

            <!-- Retirar espacio entre guiones y descomentar si se desea
            activar el paralelizado de parte del preprocesado -->
            <!-- <arg line="- -ncpu 2"/>  -->

            <arg value="--output-dir"/>
            <arg file="${daikonout.dir}"/>

            <!-- Fichero de declaraciones -->
            <arg file="${instrumented.decls}"/>

            <!-- Logs nuevos generados tras la ejecución anterior de
            BPELUnit (no se permite ejecutar varias pruebas de unidad
            concurrentemente) -->
            <fileset dir="${processlog.dir}">
                <include name="**/*.log"/>
                <depend targetdir="."> 
                    <mapper type="merge" to="${instrumented.bpel}"/>
                </depend>
            </fileset>
        </apply>
    </target>
    <target depends="init,abstract" description="Crear el BPR para ActiveBPEL" name="build-bpr">
	<!-- Download the BPEL instrumenter JAR -->
    	<get src="${instr.jar.url}" dest="${instr.jar.location}" usetimestamp="true"/>
    	<taskdef name="instrument"
             classname="es.uca.webservices.bpel.ant.InstrumentBPELProcessTask"
             classpath="${instr.jar.location}"/>
    	<instrument bpel="${main.bpel}" bpr="${bprfile}"/>

	<echo>Moviendo ficheros de ${user.dir} a ${proy}</echo>
	<!-- Movemos los ficheros temporales generados en el directorio
	     de trabajo al directorio de proyecto desde el cual se
	     importó este ant  -->
	<!-- <move file="${user.dir}/catalog.xml" todir="${proy}"/> -->
	<!-- <move file="${user.dir}/proceso.pdd" todir="${proy}"/> -->
        <move file="${user.dir}/tiposReunidos.xml" todir="${proy}"/>
        <move file="${user.dir}/procesoInspeccionado.decls" todir="${proy}"/>
        <move file="${user.dir}/procesoInspeccionado.bpel" todir="${proy}"/>
    </target>

</project>
